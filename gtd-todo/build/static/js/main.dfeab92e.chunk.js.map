{"version":3,"sources":["components/Task.js","components/TodoApp.js","components/Nav.js","components/App.js","serviceWorker.js","index.js"],"names":["Task","props","className","isDone","onClick","done","width","height","xmlns","d","type","placeholder","onChange","change","value","name","rankChange","rank","taskMinitesChange","taskMinites","delete","viewBox","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","App","tweetButton","donepo","todayTasks","id","endTime","Date","taskState","setTaskState","progressState","setProgressState","toggleDoneHandler","event","todayTaskIndex","findIndex","t","todayTask","allTaskMin","doneTaskMin","forEach","index","array","Number","nameChangedHandler","target","taskMinitesChangedHandler","diff","rankChangedHandler","deleteTaskHandler","taskIndex","todayTaskstmp","splice","calcProgress","marginTop","animation","position","left","top","style","strokeWidth","styles","buildStyles","rotation","strokeLinecap","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","display","alignItems","fontSize","textAlign","color","textShadow","marginLeft","href","data-size","data-text","data-url","data-hashtags","data-show-count","max","TransitionGroup","map","CSSTransition","timeout","classNames","push","Math","random","toString","substring","onTouchStart","Nav","children","to","path","Users","Contact","Policy","Login","Signin","Help","exact","Landing","NotFound","match","useRouteMatch","User","useParams","userId","date","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dfeab92e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Task.css\";\n\nconst Task = (props) => {\n  return (\n    <div className={\"Task\"}>\n      <div className={props.isDone ? \"Checked\" : \"Unchecked\"}>\n        <button className=\"CheckBox\" onClick={props.done}>\n          <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M21 6.285l-11.16 12.733-6.84-6.018 1.319-1.49 5.341 4.686 9.865-11.196 1.475 1.285z\" />\n          </svg>\n        </button>\n        <input\n          type=\"text\"\n          placeholder=\"New task\"\n          onChange={props.change}\n          value={props.name}\n        />\n        <select onChange={props.rankChange} value={props.rank}>\n          <option value=\"A\">A</option>\n          <option value=\"B\">B</option>\n          <option value=\"C\">C</option>\n        </select>\n        <div className=\"InputNum\">\n          <input\n            type=\"number\"\n            onChange={props.taskMinitesChange}\n            value={props.taskMinites}\n          />\n          min\n        </div>\n        {/* <input\n          type=\"date\"\n          onChange={props.endTimeChange}\n          value={props.endTime}\n        /> */}\n        <button className=\"Trash\" onClick={props.delete}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M21 6l-3 18h-12l-3-18h2.028l2.666 16h8.611l2.666-16h2.029zm-4.711-4c-.9 0-1.631-1.099-1.631-2h-5.316c0 .901-.73 2-1.631 2h-5.711v2h20v-2h-5.711z\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Task;\n","import React, { useState } from \"react\";\nimport \"./TodoApp.css\";\nimport Task from \"./Task\";\nimport {\n  buildStyles,\n  CircularProgressbarWithChildren,\n} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nimport TransitionGroup from \"react-transition-group/TransitionGroup\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\n\n// Hook\nfunction useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nconst App = (props) => {\n  const [taskState, setTaskState] = useLocalStorage(\"taskState\", {\n    todayTasks: [\n      {\n        id: \"asdfas\",\n        name: \"アプリにアクセスする\",\n        isDone: true,\n        endTime: Date.parse(2020 / 10 / 21),\n        taskMinites: 10,\n        rank: \"A\",\n      },\n      {\n        id: \"afffdjkdk\",\n        name: \"Task を登録する\",\n        isDone: false,\n        endTime: Date(),\n        taskMinites: 20,\n        rank: \"A\",\n      },\n    ],\n  });\n\n  const [progressState, setProgressState] = useLocalStorage(\"progressState\", [\n    10,\n    30,\n  ]);\n\n  let tweetMin = progressState[0];\n\n  const resetTaskHandler = () => {\n    setTaskState({\n      todayTasks: [\n        {\n          id: \"asdfas\",\n          name: \"Sample1\",\n          isDone: false,\n          endTime: Date.parse(2020 / 10 / 21),\n          taskMinites: 30,\n          rank: \"A\",\n        },\n        {\n          id: \"afffdjkdk\",\n          name: \"Sample2\",\n          isDone: false,\n          endTime: Date(),\n          taskMinites: 30,\n          rank: \"B\",\n        },\n      ],\n    });\n    setProgressState([0, 60]);\n  };\n\n  const addTaskHandler = () => {\n    const todayTasks = taskState.todayTasks;\n    todayTasks.push({\n      id: Math.random().toString(32).substring(2),\n      name: \"\",\n      isDone: false,\n      endTime: Date(),\n      taskMinites: 30,\n      rank: \"A\",\n    });\n    setTaskState({ todayTasks });\n    calcProgress();\n  };\n\n  const toggleDoneHandler = (event, id) => {\n    const todayTaskIndex = taskState.todayTasks.findIndex((t) => {\n      return t.id === id;\n    });\n    const todayTask = {\n      ...taskState.todayTasks[todayTaskIndex],\n    };\n    todayTask.isDone = todayTask.isDone ? false : true;\n    const todayTasks = [...taskState.todayTasks];\n    todayTasks[todayTaskIndex] = todayTask;\n    setTaskState({ todayTasks: todayTasks });\n\n    let allTaskMin = 0;\n    let doneTaskMin = 0;\n    taskState.todayTasks.forEach((todayTask, index, array) => {\n      allTaskMin += Number(todayTask.taskMinites);\n      if (todayTask.isDone) {\n        doneTaskMin += Number(todayTask.taskMinites);\n      }\n    });\n\n    if (todayTask.isDone) {\n      doneTaskMin += Number(todayTask.taskMinites);\n    } else {\n      doneTaskMin -= Number(todayTask.taskMinites);\n    }\n    setProgressState([doneTaskMin, allTaskMin]);\n  };\n\n  const nameChangedHandler = (event, id) => {\n    const todayTaskIndex = taskState.todayTasks.findIndex((t) => {\n      return t.id === id;\n    });\n    const todayTask = {\n      ...taskState.todayTasks[todayTaskIndex],\n    };\n    todayTask.name = event.target.value;\n    const todayTasks = [...taskState.todayTasks];\n    todayTasks[todayTaskIndex] = todayTask;\n    setTaskState({ todayTasks: todayTasks });\n  };\n\n  const taskMinitesChangedHandler = (event, id) => {\n    const todayTaskIndex = taskState.todayTasks.findIndex((t) => {\n      return t.id === id;\n    });\n    const todayTask = {\n      ...taskState.todayTasks[todayTaskIndex],\n    };\n    const diff = Number(event.target.value) - Number(todayTask.taskMinites);\n    console.log(event.target.value);\n    console.log(todayTask.taskMinites);\n    todayTask.taskMinites = event.target.value;\n    const todayTasks = [...taskState.todayTasks];\n    todayTasks[todayTaskIndex] = todayTask;\n    setTaskState({ todayTasks: todayTasks });\n\n    let allTaskMin = 0;\n    let doneTaskMin = 0;\n    taskState.todayTasks.forEach((todayTask, index, array) => {\n      allTaskMin += Number(todayTask.taskMinites);\n      if (todayTask.isDone) {\n        doneTaskMin += Number(todayTask.taskMinites);\n      }\n    });\n\n    allTaskMin += Number(diff);\n    if (todayTask.isDone) {\n      doneTaskMin += Number(diff);\n    }\n    setProgressState([doneTaskMin, allTaskMin]);\n  };\n\n  const rankChangedHandler = (event, id) => {\n    const todayTaskIndex = taskState.todayTasks.findIndex((t) => {\n      return t.id === id;\n    });\n    const todayTask = {\n      ...taskState.todayTasks[todayTaskIndex],\n    };\n    todayTask.rank = event.target.value;\n    const todayTasks = [...taskState.todayTasks];\n    todayTasks[todayTaskIndex] = todayTask;\n    setTaskState({ todayTasks: todayTasks });\n  };\n\n  const deleteTaskHandler = (taskIndex) => {\n    // const todayTasks = taskState.todayTasks.slice();\n    const todayTaskstmp = taskState.todayTasks;\n    todayTaskstmp.splice(taskIndex, 1);\n    calcProgress(setTaskState({ todayTasks: todayTaskstmp }));\n  };\n\n  const calcProgress = () => {\n    let allTaskMin = 0;\n    let doneTaskMin = 0;\n    taskState.todayTasks.forEach((todayTask, index, array) => {\n      allTaskMin += Number(todayTask.taskMinites);\n      if (todayTask.isDone) {\n        doneTaskMin += Number(todayTask.taskMinites);\n      }\n    });\n    setProgressState([doneTaskMin, allTaskMin]);\n  };\n\n  let tweetButton;\n  let donepo;\n  if (progressState[1] === progressState[0] && progressState[0] !== 0) {\n    tweetMin = progressState[0];\n    tweetButton = {\n      marginTop: \"35px\",\n    };\n    donepo = {\n      animation: \"donepo 2s infinite\",\n    };\n  } else {\n    tweetButton = {\n      position: \"absolute\",\n      left: \"-100px\",\n      top: \"-100px\",\n    };\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Today's tasks</h1>\n      <div className=\"header\">\n        <div className=\"ProgressOuter\" style={donepo}>\n          <CircularProgressbarWithChildren\n            value={(100 * Number(progressState[0])) / Number(progressState[1])}\n            strokeWidth={15}\n            styles={buildStyles({\n              rotation: 0.5,\n              strokeLinecap: \"butt\",\n              pathTransitionDuration: 1,\n              pathColor: \"#507cda\",\n              textColor: \"#1c64ff\",\n              trailColor: \"#c6c6e6\",\n              backgroundColor: \"#3e98c7\",\n            })}\n          >\n            <div\n              className=\"ProgressInner\"\n              style={{ display: \"flex\", alignItems: \"flex-center\" }}\n            >\n              <div className=\"ProgressInnerInner\">\n                <div\n                  style={{\n                    fontSize: \"16vw\",\n                    textAlign: \"center\",\n                    color: \"#307cea\",\n                    textShadow: \"0px 0px 7px #1c64ff\",\n                  }}\n                >\n                  {(tweetMin = progressState[0])}\n                </div>\n                <div\n                  style={{\n                    fontSize: \"5vw\",\n                    color: \"#9f9ea7\",\n                    display: \"flex\",\n                    marginLeft: \"40%\",\n                  }}\n                >\n                  /\n                  <div\n                    style={{\n                      fontSize: \"5vw\",\n                      color: \"#507cda\",\n                    }}\n                  >\n                    {progressState[1]}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </CircularProgressbarWithChildren>\n        </div>\n        {/* <button onClick={resetTaskHandler}> reset </button>\n        <button onClick={calcProgress}> sync </button> */}\n      </div>\n\n      <div style={tweetButton}>\n        <a\n          id=\"tweetButton\"\n          href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\"\n          className=\"twitter-share-button\"\n          data-size=\"large\"\n          data-text={\"✨✨今日のタスクが完了しました✨✨\"}\n          data-url=\"https://neutodo.com/gtd-todo/build/index.html\"\n          data-hashtags=\"NeuToDo\"\n          data-show-count=\"false\"\n        >\n          Tweet\n        </a>\n      </div>\n\n      <progress\n        id=\"progressbar\"\n        max={progressState[1]}\n        value={progressState[0]}\n      ></progress>\n\n      <TransitionGroup>\n        {taskState.todayTasks.map((todayTask, index) => {\n          if (!todayTask.isDone) {\n            return (\n              <CSSTransition key={todayTask.id} timeout={1000} classNames=\"hi\">\n                <Task\n                  key={todayTask.id}\n                  name={todayTask.name}\n                  isDone={todayTask.isDone}\n                  endTime={todayTask.endTime}\n                  rank={todayTask.rank}\n                  taskMinites={todayTask.taskMinites}\n                  taskMinitesChange={(event) =>\n                    taskMinitesChangedHandler(event, todayTask.id)\n                  }\n                  done={(event) => toggleDoneHandler(event, todayTask.id)}\n                  delete={() => deleteTaskHandler(index)}\n                  rankChange={(event) =>\n                    rankChangedHandler(event, todayTask.id)\n                  }\n                  change={(event) => nameChangedHandler(event, todayTask.id)}\n                />\n              </CSSTransition>\n            );\n          }\n        })}\n      </TransitionGroup>\n      <div>\n        <button\n          onClick={addTaskHandler}\n          onTouchStart=\"gtag('event', 'touch', {'event_category': 'button','event_label': 'addtask'});\"\n        >\n          Add task\n        </button>\n      </div>\n      <TransitionGroup>\n        {taskState.todayTasks.map((todayTask, index) => {\n          if (todayTask.isDone) {\n            return (\n              <CSSTransition key={todayTask.id} timeout={500} classNames=\"hi\">\n                <Task\n                  key={todayTask.id}\n                  name={todayTask.name}\n                  isDone={todayTask.isDone}\n                  endTime={todayTask.endTime}\n                  rank={todayTask.rank}\n                  taskMinites={todayTask.taskMinites}\n                  taskMinitesChange={(event) =>\n                    taskMinitesChangedHandler(event, todayTask.id)\n                  }\n                  done={(event) => toggleDoneHandler(event, todayTask.id)}\n                  delete={() => deleteTaskHandler(index)}\n                  rankChange={(event) =>\n                    rankChangedHandler(event, todayTask.id)\n                  }\n                  change={(event) => nameChangedHandler(event, todayTask.id)}\n                />\n              </CSSTransition>\n            );\n          }\n        })}\n      </TransitionGroup>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Nav.css\";\n\nconst Nav = (props) => {\n  return (\n    <div>\n      <ul className=\"nav\">\n        <li className=\"logo\">{props.children}</li>\n\n        <Link to=\"/\">\n          <li>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M6.676 9.18c-1.426-.009-3.217.764-4.583 2.13-.521.521-.979 1.129-1.333 1.812 1.232-.933 2.547-1.225 4.086-.361.453-1.199 1.056-2.418 1.83-3.581zm8.154 8.143c-1.264.826-2.506 1.422-3.581 1.842.863 1.54.571 2.853-.361 4.085.684-.353 1.291-.812 1.812-1.334 1.37-1.369 2.144-3.165 2.13-4.593zm5.127-13.288c-.344-.024-.681-.035-1.011-.035-7.169 0-11.249 5.465-12.733 9.86l3.939 3.94c4.525-1.62 9.848-5.549 9.848-12.642 0-.366-.014-.74-.043-1.123zm-8.24 8.258c-.326-.325-.326-.853 0-1.178.325-.326.853-.326 1.178 0 .326.326.326.853 0 1.178-.326.326-.853.326-1.178 0zm2.356-2.356c-.651-.65-.651-1.706 0-2.357s1.706-.651 2.356 0c.651.651.651 1.706 0 2.357-.65.65-1.704.65-2.356 0zm-12.432 10.378l-.755-.755 4.34-4.323.755.755-4.34 4.323zm4.149 1.547l-.755-.755 3.029-3.054.755.755-3.029 3.054zm-5.035 2.138l-.755-.755 5.373-5.364.756.755-5.374 5.364zm21.083-14.291c-.188.618-.673 1.102-1.291 1.291.618.188 1.103.672 1.291 1.291.189-.619.673-1.103 1.291-1.291-.618-.188-1.102-.672-1.291-1.291zm-14.655-6.504c-.247.81-.881 1.443-1.69 1.69.81.247 1.443.881 1.69 1.69.248-.809.881-1.443 1.69-1.69-.81-.247-1.442-.88-1.69-1.69zm-1.827-3.205c-.199.649-.706 1.157-1.356 1.355.65.199 1.157.707 1.356 1.355.198-.649.706-1.157 1.354-1.355-.648-.198-1.155-.706-1.354-1.355zm5.387 0c-.316 1.035-1.127 1.846-2.163 2.163 1.036.316 1.847 1.126 2.163 2.163.316-1.036 1.127-1.846 2.162-2.163-1.035-.317-1.845-1.128-2.162-2.163zm11.095 13.64c-.316 1.036-1.127 1.846-2.163 2.163 1.036.316 1.847 1.162 2.163 2.197.316-1.036 1.127-1.881 2.162-2.197-1.035-.317-1.846-1.127-2.162-2.163z\" />\n            </svg>\n          </li>\n        </Link>\n        <Link to=\"/home\">\n          <li>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M22 2v20h-20v-20h20zm2-2h-24v24h24v-24zm-4 7h-8v1h8v-1zm0 5h-8v1h8v-1zm0 5h-8v1h8v-1zm-10.516-11.304l-.71-.696-2.553 2.607-1.539-1.452-.698.71 2.25 2.135 3.25-3.304zm0 5l-.71-.696-2.552 2.607-1.539-1.452-.698.709 2.249 2.136 3.25-3.304zm0 5l-.71-.696-2.552 2.607-1.539-1.452-.698.709 2.249 2.136 3.25-3.304z\" />\n            </svg>\n          </li>\n        </Link>\n\n        <Link to=\"/home/calender\">\n          <li>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M17 1c0-.552-.447-1-1-1s-1 .448-1 1v2c0 .552.447 1 1 1s1-.448 1-1v-2zm-12 2c0 .552-.447 1-1 1s-1-.448-1-1v-2c0-.552.447-1 1-1s1 .448 1 1v2zm13 5v10h-16v-10h16zm2-6h-2v1c0 1.103-.897 2-2 2s-2-.897-2-2v-1h-8v1c0 1.103-.897 2-2 2s-2-.897-2-2v-1h-2v18h20v-18zm4 3v19h-22v-2h20v-17h2zm-17 7h-2v-2h2v2zm4 0h-2v-2h2v2zm4 0h-2v-2h2v2zm-8 4h-2v-2h2v2zm4 0h-2v-2h2v2zm4 0h-2v-2h2v2z\" />\n            </svg>\n          </li>\n        </Link>\n        <Link to=\"/users\">\n          <li>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M10.644 17.08c2.866-.662 4.539-1.241 3.246-3.682-3.932-7.427-1.042-11.398 3.111-11.398 4.235 0 7.054 4.124 3.11 11.398-1.332 2.455.437 3.034 3.242 3.682 2.483.574 2.647 1.787 2.647 3.889v1.031h-18c0-2.745-.22-4.258 2.644-4.92zm-12.644 4.92h7.809c-.035-8.177 3.436-5.313 3.436-11.127 0-2.511-1.639-3.873-3.748-3.873-3.115 0-5.282 2.979-2.333 8.549.969 1.83-1.031 2.265-3.181 2.761-1.862.43-1.983 1.34-1.983 2.917v.773z\" />\n            </svg>\n          </li>\n        </Link>\n        <li>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M4 22h-4v-4h4v4zm0-12h-4v4h4v-4zm0-8h-4v4h4v-4zm3 0v4h17v-4h-17zm0 12h17v-4h-17v4zm0 8h17v-4h-17v4z\" />\n          </svg>\n        </li>\n      </ul>\n      <div className=\"under-nav\"></div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n} from \"react-router-dom\";\nimport TodoApp from \"./TodoApp\";\nimport Nav from \"./Nav\";\n\nexport default function App() {\n  return (\n    <Router>\n      <Nav>Neu ToDo</Nav>\n      <div>\n        <Switch>\n          <Route path=\"/home\">\n            <TodoApp />\n          </Route>\n          <Route path=\"/users\">\n            <Users />\n          </Route>\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n          <Route path=\"/policy\">\n            <Policy />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/signin\">\n            <Signin />\n          </Route>\n          <Route path=\"/help\">\n            <Help />\n          </Route>\n          <Route exact path=\"/\">\n            <Landing />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n      <small>\n        ©︎<a href=\"https://toyo.dev\">Toyoshima Hidenori</a> 2020, v1.0.0\n      </small>\n    </Router>\n  );\n}\n\nfunction Contact() {\n  return <h2>Contact</h2>;\n}\n\nfunction Landing() {\n  return <h2>Landing</h2>;\n}\n\nfunction Policy() {\n  return <h2>Contact</h2>;\n}\n\nfunction Login() {\n  return <h2>Landing</h2>;\n}\nfunction Signin() {\n  return <h2>Contact</h2>;\n}\n\nfunction Help() {\n  return <h2>Landing</h2>;\n}\n\nfunction NotFound() {\n  return <h2>NotFound</h2>;\n}\n\nfunction Users() {\n  let match = useRouteMatch();\n\n  return (\n    <div>\n      <h2>進捗公開機能(coming soon!)</h2>\n      <p>他の人の頑張りを見ることができます。</p>\n      <Switch>\n        <Route path={`${match.path}/:userId/:date`}>\n          <User />\n        </Route>\n        <Route path={`${match.path}/:userId/`}>\n          <h3>Please select a date.</h3>\n        </Route>\n        <Route path={match.path}>\n          <h3>ユーザーを選択してください。</h3>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction User() {\n  let { userId, date } = useParams();\n  return (\n    <div>\n      <h3>Requested User ID: {userId}</h3>\n      <p>date: {date}</p>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}